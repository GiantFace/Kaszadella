// scripts/create-demo-coupons.ts
import { db } from "@/database/drizzle";
import { coupons } from "@/database/schema";

async function createDemoCoupons() {
  console.log("üé´ Demo kuponok l√©trehoz√°sa...");
  
  const demoCoupons = [
    {
      code: "WELCOME20",
      name: "√údv√∂zl≈ë 20% kedvezm√©ny",
      type: "percentage" as const,
      value: 20,
      minAmount: 0,
      maxDiscount: 2000, // Max 2000 Ft kedvezm√©ny
      usageLimit: 100,
      validFrom: new Date(),
      validUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 nap
      isActive: true,
      applicablePackages: JSON.stringify([1, 2, 3]), // Mind a 3 csomagra
    },
    {
      code: "SAVE1000",
      name: "1000 Ft kedvezm√©ny",
      type: "fixed" as const,
      value: 1000,
      minAmount: 3000, // Min 3000 Ft v√°s√°rl√°s
      maxDiscount: null,
      usageLimit: 50,
      validFrom: new Date(),
      validUntil: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), // 14 nap
      isActive: true,
      applicablePackages: JSON.stringify([2, 3]), // Csak KASZA √©s KASZADELLA
    },
    {
      code: "FREESTART",
      name: "Ingyenes START csomag",
      type: "free" as const,
      value: 0,
      minAmount: 0,
      maxDiscount: null,
      usageLimit: 10,
      validFrom: new Date(),
      validUntil: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 nap
      isActive: true,
      applicablePackages: JSON.stringify([1]), // Csak START csomag
    },
    {
      code: "TESTCOUPON",
      name: "Teszt kupon - 50%",
      type: "percentage" as const,
      value: 50,
      minAmount: 0,
      maxDiscount: null,
      usageLimit: null, // Korl√°tlan
      validFrom: new Date(),
      validUntil: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 √©v
      isActive: true,
      applicablePackages: JSON.stringify([1, 2, 3]),
    },
    {
      code: "EXPIRED",
      name: "Lej√°rt kupon (teszt)",
      type: "percentage" as const,
      value: 30,
      minAmount: 0,
      maxDiscount: null,
      usageLimit: 5,
      validFrom: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), // 14 napja
      validUntil: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 napja lej√°rt
      isActive: true,
      applicablePackages: JSON.stringify([1, 2, 3]),
    }
  ];

  try {
    for (const coupon of demoCoupons) {
      await db.insert(coupons).values(coupon);
      console.log(`‚úÖ Kupon l√©trehozva: ${coupon.code} - ${coupon.name}`);
    }
    
    console.log("üéâ Demo kuponok sikeresen l√©trehozva!");
    console.log("\nüìã TESZT KUPONOK:");
    console.log("‚Ä¢ WELCOME20 - 20% kedvezm√©ny (max 2000 Ft)");
    console.log("‚Ä¢ SAVE1000 - 1000 Ft kedvezm√©ny (min 3000 Ft v√°s√°rl√°s)");
    console.log("‚Ä¢ FREESTART - Ingyenes START csomag");
    console.log("‚Ä¢ TESTCOUPON - 50% kedvezm√©ny (teszt)");
    console.log("‚Ä¢ EXPIRED - Lej√°rt kupon (teszt)");
    
  } catch (error) {
    console.error("‚ùå Hiba a kuponok l√©trehoz√°sakor:", error);
  }
}

// Futtat√°s
createDemoCoupons().catch(console.error); 